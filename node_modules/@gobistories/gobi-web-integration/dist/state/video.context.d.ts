import { RefObject } from 'react';
import ReactPlayer from 'react-player';
import { ProgressState } from '~/types/player.types';
import { Chapter, Story } from '~/types/story.types';
import { VideoProgress } from '~/state/video-progress';
export interface VideoContext {
    reactPlayerRef: RefObject<ReactPlayer>;
    story: Story;
    play: boolean;
    muted: boolean;
    ready: boolean;
    preloader: boolean;
    hasStartedAtLeastOnce: boolean;
    loading: boolean;
    currentChapter: Chapter;
    currentChapterIndex: number;
    focused: boolean;
    videoProgress: VideoProgress;
    setPlay: (data: boolean) => void;
    setMuted: (data: boolean) => void;
    setFocused: (data: boolean) => void;
    setPreloader: (data: boolean) => void;
    handleProgress?: (state: ProgressState) => void;
    handleError?: () => void;
    handleLinkClicked?: (linkUrl: string) => void;
    handlePlay?: () => void;
    handlePause?: () => void;
    handleStart?: () => void;
    handleEnded?: () => void;
    handleReady?: () => void;
    handleBuffer?: () => void;
    handleBufferEnd?: () => void;
    goToPreviousChapter: () => void;
    goToNextChapter: () => void;
    onKeyDown: (event: KeyboardEvent) => void;
}
export declare const VIDEO_DEFAULT_VALUE: VideoContext;
export declare const useVideo: (reactPlayerRef: RefObject<ReactPlayer>, story: Story) => VideoContext;
export declare const videoContext: import("react").Context<VideoContext>;
